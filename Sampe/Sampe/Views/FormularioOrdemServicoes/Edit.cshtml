@model Sampe.FormularioOrdemServico

@{
    ViewBag.Title = "Edit";
}
<script>
    $(document).ready(function () {
        $("#ocultar").click(function (event) {
            event.preventDefault();
            $("#capaefectos").hide("slow");
        });

        $("#mostrar").click(function (event) {
            event.preventDefault();
            $("#capaefectos").show("slow");
        });

        $("#ocultar2").click(function (event) {
            event.preventDefault();
            $("#capaefectos2").hide("slow");
        });

        $("#mostrar2").click(function (event) {
            event.preventDefault();
            $("#capaefectos2").show("slow");
        });

        $("#enable").click(function (event) {
            // habilita o campo 
            $("input").prop("disabled", false);

        });

        $("#disable").click(function (event) {
            // desabilita o campo 
            $("input").prop("disabled", true);

        });

    });
</script>
<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Formulario de Ordem de Servico</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.FormularioOrdemServicoId)

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.TipoManutencao, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.TipoManutencao, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    @Html.HiddenFor(model => model.TipoManutencao)
                    @Html.ValidationMessageFor(model => model.TipoManutencao, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.MaquinaId, "MaquinaId", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.DropDownList("MaquinaId", null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                    @Html.HiddenFor(model => model.MaquinaId)
                    @Html.ValidationMessageFor(model => model.MaquinaId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Dt, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Dt, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.Dt, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.HoraInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.HoraInicio, new { htmlAttributes = new {type="time" ,@class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HoraInicio, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.HoraFinal, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.HoraFinal, new { htmlAttributes = new { type = "time" , @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HoraFinal, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Intervalo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Intervalo, new { htmlAttributes = new { @class = "checkbox" } })
                        @Html.ValidationMessageFor(model => model.Intervalo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.IntervaloInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.IntervaloInicio, new { htmlAttributes = new { type = "time" , @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IntervaloInicio, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.IntervaloFim, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.IntervaloFim, new { htmlAttributes = new { type = "time",  @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IntervaloFim, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.ObsIntervalo, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.ObsIntervalo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ObsIntervalo, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Usuario, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Usuario.NomeUsuario, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.Usuario.NomeUsuario, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.UsuarioId, "UsuarioId", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.DropDownList("UsuarioId", null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                    @Html.HiddenFor(model=> model.UsuarioId)
                    @Html.ValidationMessageFor(model => model.UsuarioId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class=" col-lg-6">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Materiais Usados</th>
                            <th>Quantidade</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@Html.EditorFor(model => model.MaterialUsado, new { htmlAttributes = new { @class = "form-control" } })</td>
                            <td>@Html.EditorFor(model => model.QuantUsado, new { htmlAttributes = new { @class = "form-control" } })</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class=" col-lg-6">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Materiais Sobrantes</th>
                            <th>Quantidade</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@Html.EditorFor(model => model.MaterialSobrante, new { htmlAttributes = new { @class = "form-control" } })</td>
                            <td>@Html.EditorFor(model => model.QuantSobrante, new { htmlAttributes = new { @class = "form-control" } })</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <button value="Próximo" id="mostrar" class="btn btn-default" name="action">Próximo</button>

        <div class="container" id="capaefectos">
            @foreach (var a in Model.FormularioOSAtividades)
            {
                <div class="checkbox" id="check">
                    <input type="checkbox" value="@a.FormularioOSAtividadeId" name="id">
                    <label>@a.AtividadeOS.NomeAtvOs</label>
                </div>
            }
            <br />
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
